a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1455798174;s:8:"modified";i:1455799464;}s:7:"creator";s:15:"Coornaert David";s:4:"user";s:4:"root";s:11:"last_change";a:7:{s:4:"date";i:1455799464;s:2:"ip";s:9:"127.0.0.1";s:4:"type";s:1:"E";s:2:"id";s:81:"procedures_fonctions_generatrices_fonctions_generatrices_de_fonctions_recursivite";s:4:"user";s:4:"root";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:4:"root";s:15:"Coornaert David";}s:5:"title";s:10:"procédure";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:9:"procedure";s:5:"title";s:10:"procédure";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:296:"en Python, le code DEF permet de définir bien des choses la plus simple est la “procédure”, qu'il faut considérer comme un “sous-programme”, une unité de code que l'on veut éviter de répéter.

procédure

Par exemple :


def pa():
    print "="*40
    print "done"
    print "="*40";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1455798174;s:8:"modified";i:1455799464;}s:7:"creator";s:15:"Coornaert David";s:4:"user";s:4:"root";s:11:"last_change";a:7:{s:4:"date";i:1455799464;s:2:"ip";s:9:"127.0.0.1";s:4:"type";s:1:"E";s:2:"id";s:81:"procedures_fonctions_generatrices_fonctions_generatrices_de_fonctions_recursivite";s:4:"user";s:4:"root";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:4:"root";s:15:"Coornaert David";}}}