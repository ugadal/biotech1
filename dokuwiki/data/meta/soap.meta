a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1477463241;s:8:"modified";i:1513763056;}s:7:"creator";s:15:"Coornaert David";s:4:"user";s:4:"root";s:11:"last_change";a:8:{s:4:"date";i:1513763056;s:2:"ip";s:12:"192.168.2.61";s:4:"type";s:1:"E";s:2:"id";s:4:"soap";s:4:"user";s:6:"renaud";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:71;}s:11:"contributor";a:2:{s:4:"root";s:15:"Coornaert David";s:6:"renaud";s:6:"renaud";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:11:"description";a:1:{s:8:"abstract";s:244:"créer un serveur:
from SOAPpy import *
def unefonction(var):
    bla="toto"
    return bla

server = SOAPServer( ( '0.0.0.0', 9080 ) )
server.registerFunction( unefonction )
server.serve_forever()
créer un client :

regarder dans rgbclient :)";}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1477463241;s:8:"modified";i:1513763056;}s:7:"creator";s:15:"Coornaert David";s:4:"user";s:4:"root";s:11:"last_change";a:8:{s:4:"date";i:1513763056;s:2:"ip";s:12:"192.168.2.61";s:4:"type";s:1:"E";s:2:"id";s:4:"soap";s:4:"user";s:6:"renaud";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:71;}s:11:"contributor";a:2:{s:4:"root";s:15:"Coornaert David";s:6:"renaud";s:6:"renaud";}}}